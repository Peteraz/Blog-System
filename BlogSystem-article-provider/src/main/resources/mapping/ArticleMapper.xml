<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.blogsystemarticleprovider.dao.ArticleMapper">
  <resultMap id="BaseResultMap" type="com.example.blogsystem.entity.Article">
    <id column="article_id" jdbcType="VARCHAR" property="articleId" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="article_name" jdbcType="VARCHAR" property="articleName" />
    <result column="category_name" jdbcType="VARCHAR" property="categoryName" />
    <result column="publish_time" jdbcType="TIMESTAMP" property="publishTime" />
    <result column="edit_time" jdbcType="TIMESTAMP" property="editTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.example.blogsystem.entity.Article">
    <result column="article_contents" jdbcType="LONGVARCHAR" property="articleContents" />
  </resultMap>
  <sql id="Base_Column_List">
    article_id, user_id, article_name, category_name, publish_time, edit_time
  </sql>
  <sql id="Blob_Column_List">
    article_contents
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from article
    where article_id = #{articleId,jdbcType=VARCHAR}
  </select>
  <select id="selectByUserId" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from article
    where userid = #{userid,jdbcType=VARCHAR}
  </select>
  <select id="getArticleListById" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from article
    where userid = #{userid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from article
    where article_id = #{articleId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.example.blogsystem.entity.Article">
    insert into article (article_id, user_id, article_name,
      category_name, publish_time, edit_time, 
      article_contents)
    values (#{articleId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{articleName,jdbcType=VARCHAR},
      #{categoryName,jdbcType=VARCHAR}, #{publishTime,jdbcType=TIMESTAMP}, #{editTime,jdbcType=TIMESTAMP}, 
      #{articleContents,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.blogsystem.entity.Article">
    insert into article
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="articleId != null">
        article_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="articleName != null">
        article_name,
      </if>
      <if test="categoryName != null">
        category_name,
      </if>
      <if test="publishTime != null">
        publish_time,
      </if>
      <if test="editTime != null">
        edit_time,
      </if>
      <if test="articleContents != null">
        article_contents,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="articleId != null">
        #{articleId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="articleName != null">
        #{articleName,jdbcType=VARCHAR},
      </if>
      <if test="categoryName != null">
        #{categoryName,jdbcType=VARCHAR},
      </if>
      <if test="publishTime != null">
        #{publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="editTime != null">
        #{editTime,jdbcType=TIMESTAMP},
      </if>
      <if test="articleContents != null">
        #{articleContents,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.blogsystem.entity.Article">
    update article
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="articleName != null">
        article_name = #{articleName,jdbcType=VARCHAR},
      </if>
      <if test="categoryName != null">
        category_name = #{categoryName,jdbcType=VARCHAR},
      </if>
      <if test="publishTime != null">
        publish_time = #{publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="editTime != null">
        edit_time = #{editTime,jdbcType=TIMESTAMP},
      </if>
      <if test="articleContents != null">
        article_contents = #{articleContents,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where article_id = #{articleId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.example.blogsystem.entity.Article">
    update article
    set user_id = #{userId,jdbcType=VARCHAR},
      article_name = #{articleName,jdbcType=VARCHAR},
      category_name = #{categoryName,jdbcType=VARCHAR},
      publish_time = #{publishTime,jdbcType=TIMESTAMP},
      edit_time = #{editTime,jdbcType=TIMESTAMP},
      article_contents = #{articleContents,jdbcType=LONGVARCHAR}
    where article_id = #{articleId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.blogsystem.entity.Article">
    update article
    set user_id = #{userId,jdbcType=VARCHAR},
      article_name = #{articleName,jdbcType=VARCHAR},
      category_name = #{categoryName,jdbcType=VARCHAR},
      publish_time = #{publishTime,jdbcType=TIMESTAMP},
      edit_time = #{editTime,jdbcType=TIMESTAMP}
    where article_id = #{articleId,jdbcType=VARCHAR}
  </update>
</mapper>