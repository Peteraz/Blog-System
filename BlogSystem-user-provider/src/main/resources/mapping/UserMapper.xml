<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.blogsystemuserprovider.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.example.blogsystem.entity.User">
    <id column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_icon" jdbcType="VARCHAR" property="userIcon" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="sex" jdbcType="CHAR" property="sex" />
    <result column="phone_number" jdbcType="VARCHAR" property="phoneNumber" />
    <result column="birthday" jdbcType="VARCHAR" property="birthday" />
    <result column="state" jdbcType="VARCHAR" property="state" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="biography" jdbcType="VARCHAR" property="biography" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="login_time" jdbcType="TIMESTAMP" property="loginTime" />
    <result column="last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime" />
    <result column="login_count" jdbcType="BIGINT" property="loginCount" />
    <result column="identity" jdbcType="VARCHAR" property="identity" />
  </resultMap>
  <sql id="Base_Column_List">
    user_id, account, password, email, user_name, user_icon, age, sex, phone_number, birthday,
    state, city, biography, create_time, login_time, last_login_time, login_count, identity
  </sql>
  <select id="getUserById" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where user_id = #{userId,jdbcType=VARCHAR}
  </select>
  <select id="getUserByAccountAndPassword" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user where account = #{account,jdbcType=VARCHAR}
    <if test="password != null">
      and password= #{password,jdbcType=VARCHAR}
    </if>
  </select>
  <select id="getUserByEmail" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where email = #{email,jdbcType=VARCHAR}
  </select>
  <delete id="deleteById" parameterType="java.lang.String">
    delete from user
    where user_id = #{userId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.example.blogsystem.entity.User">
    insert into user (user_id, account, password,
      email, user_name, user_icon, 
      age, sex, phone_number, 
      birthday, state, city, 
      biography, create_time, login_time, 
      last_login_time, login_count, identity
      )
    values (#{userId,jdbcType=VARCHAR}, #{account,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
      #{email,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, #{userIcon,jdbcType=VARCHAR}, 
      #{age,jdbcType=INTEGER}, #{sex,jdbcType=CHAR}, #{phoneNumber,jdbcType=VARCHAR}, 
      #{birthday,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, 
      #{biography,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{loginTime,jdbcType=TIMESTAMP}, 
      #{lastLoginTime,jdbcType=TIMESTAMP}, #{loginCount,jdbcType=BIGINT}, #{identity,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.blogsystem.entity.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="userIcon != null">
        user_icon,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="phoneNumber != null">
        phone_number,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="biography != null">
        biography,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="lastLoginTime != null">
        last_login_time,
      </if>
      <if test="loginCount != null">
        login_count,
      </if>
      <if test="identity != null">
        identity,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userIcon != null">
        #{userIcon,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=CHAR},
      </if>
      <if test="phoneNumber != null">
        #{phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="biography != null">
        #{biography,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginTime != null">
        #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="loginCount != null">
        #{loginCount,jdbcType=BIGINT},
      </if>
      <if test="identity != null">
        #{identity,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByUserSelective" parameterType="com.example.blogsystem.entity.User">
    update user
    <set>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userIcon != null">
        user_icon = #{userIcon,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=CHAR},
      </if>
      <if test="phoneNumber != null">
        phone_number = #{phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="biography != null">
        biography = #{biography,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginTime != null">
        last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="loginCount != null">
        login_count = #{loginCount,jdbcType=BIGINT},
      </if>
      <if test="identity != null">
        identity = #{identity,jdbcType=VARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=VARCHAR}
  </update>
  <update id="updateById" parameterType="com.example.blogsystem.entity.User">
    update user
    set account = #{account,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      user_icon = #{userIcon,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      sex = #{sex,jdbcType=CHAR},
      phone_number = #{phoneNumber,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      biography = #{biography,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      login_time = #{loginTime,jdbcType=TIMESTAMP},
      last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      login_count = #{loginCount,jdbcType=BIGINT},
      identity = #{identity,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=VARCHAR}
  </update>
</mapper>